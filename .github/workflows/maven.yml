name: MATRIX Java POM update and Artifact with Maven 

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  folders-list:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
    - uses: actions/checkout@v3
    - id: set-matrix
      run: |
        echo "::set-output name=matrix::{"include":[{\"folder\":\"shuma_admin\"},{\"folder\":\"shuma_audit\"},{\"folder\":\"shuma_bleaching\"},{\"folder\":\"shuma_camunda\"},{\"folder\":\"shuma_cases\"},{\"folder\":\"shuma_config_server\"},{\"folder\":\"shuma_discovery\"},{\"folder\":\"shuma_documents\"},{\"folder\":\"shuma_employee_management\"},{\"folder\":\"shuma_entirex_api\"},{\"folder\":\"shuma_error_handling\"},{\"folder\":\"shuma_infra\"},{\"folder\":\"shuma_infra-parent\"},{\"folder\":\"shuma_infra-springboot-parent\"},{\"folder\":\"shuma_letters\"},{\"folder\":\"shuma_lm_common\"},{\"folder\":\"shuma_pdf_generator\"},{\"folder\":\"shuma_resource_bundle\"}]}"

  build:
    needs: folders-list
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{fromJson(needs.folders-list.outputs.matrix)}}
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 2
    - name: Check for changes in folder
      id: check_changes
      run: |
          if [ -n "$(git diff --name-only ${{ github.sha }} ${{ github.sha }}~1 -- ${{ matrix.folder }})" ]; then
            echo "CHANGES_DETECTED=true" >> $GITHUB_ENV
          else
            echo "CHANGES_DETECTED=false" >> $GITHUB_ENV
          fi
    - name: Set up JDK 17
      if: env.CHANGES_DETECTED == 'true'
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'oracle'
        cache: maven
    - name: Build with Maven OFFLINE  
      if: env.CHANGES_DETECTED == 'true'
      run: |
        if [ -n "$(git diff --name-only ${{ github.sha }} ${{ github.sha }}~1 -- ${{ matrix.folder }})" ]; then
          cd ${{ matrix.folder }} && mvn -B clean install -DskipTests -Dspring-boot.repackage.skip=true
        fi
    - name: Copy dependencies to a folder
      if: env.CHANGES_DETECTED == 'true'    
      run: |
        if [ -n "$(git diff --name-only ${{ github.sha }} ${{ github.sha }}~1 -- ${{ matrix.folder }})" ]; then
          cd ${{ matrix.folder }} && mvn dependency:copy-dependencies -DoutputDirectory=${{ github.workspace }}/${{ matrix.folder }}/dependencies
        fi
    
    - name: Check size of .m2 repository
      if: env.CHANGES_DETECTED == 'true'    
      run: du -sh ~/.m2
    - name: Archive dependencies
      id: archive_dependencies # Adding an ID to this step
      if: env.CHANGES_DETECTED == 'true'    
      run: |
          if [ -n "$(git diff --name-only ${{ github.sha }} ${{ github.sha }}~1 -- ${{ matrix.folder }})" ]; then
            zip -r dependencies.zip ~/.m2
            echo "Zipped dependencies:"
            ls -l dependencies.zip
          else
            echo "No changes detected in ${{ matrix.folder }}, skipping zipping dependencies."
          fi
    - name: Delete Old Artifacts
      if: env.CHANGES_DETECTED == 'true'
      continue-on-error: true
      uses: actions/github-script@v6
      id: artifact
      with:
        script: |
          const res = await github.rest.actions.listArtifactsForRepo({
            owner: context.repo.owner,
            repo: context.repo.repo,
          })  
          res.data.artifacts
            .forEach(({ id }) => {
              github.rest.actions.deleteArtifact({
                owner: context.repo.owner,
                repo: context.repo.repo,
                artifact_id: id,
              })
            })
    

    - name: Upload dependencies as artifact
      if: env.CHANGES_DETECTED == 'true'  && steps.archive_dependencies.outcome == 'success'
      
      uses: actions/upload-artifact@v2
      with:
        name: maven-dependencies-${{ matrix.folder }}
        path: dependencies.zip
    - name: Clean up
      if: env.CHANGES_DETECTED == 'true'    
      run: rm -rf ${{ github.workspace }}/dependencies dependencies.zip
